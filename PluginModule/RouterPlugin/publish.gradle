/**
 * 升级基础库版本：
 * 1. 修改对应库 build.gradle文件中，ext节点下的ikversion 版本
 * 2. 执行命令./gradlew :xxx:publish
 *
 * 允许配置值：
 * 局部配置：
 * ikVersion
 * isRelease
 *
 * 全局配置
 * artifactory_contextUrl
 * release_repo
 * snapshot_repo
 * third_platform_aar_group
 * maven_groupId
 * ikUserName
 * ikPassword
 */

apply plugin: 'maven-publish'

afterEvaluate {
    task generateSource(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier 'sources'
    }

    publishing {
        publications {
            aar(MavenPublication) {
                groupId maven_groupId
                artifactId project.name
                version "${isRelease ? ikVersion : "${ikVersion}-SNAPSHOT"}"
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")
                artifact generateSource

                pom.withXml {
                    //添加依赖
                    def dependenciesNode = asNode().appendNode('dependencies')
                    project.configurations.getByName("api").allDependencies.each {
                        if (it.group != null && it.name != null && it.group != project.parent.name) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)

                            if (it instanceof ModuleDependency) {
                                if (it.artifacts.size() > 0) {
                                    def type = it.artifacts[0].getType()
                                    dependencyNode.appendNode('type', type)
                                }
                            }
                            //If there are any exclusions in dependency
                            if (it.excludeRules.size() > 0) {
                                def exclusionsNode = dependencyNode.appendNode('exclusions')
                                it.excludeRules.each { rule ->
                                    def exclusionNode = exclusionsNode.appendNode('exclusion')
                                    exclusionNode.appendNode('groupId', rule.group)
                                    exclusionNode.appendNode('artifactId', rule.module)
                                }
                            }
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                url "${artifactory_contextUrl}/${isRelease ? release_repo : snapshot_repo}"
                credentials {
                    username ikUserName
                    password ikPassword
                }
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    dependsOn 'assembleRelease'
}
